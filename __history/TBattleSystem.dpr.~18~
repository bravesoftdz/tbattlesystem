program TBattleSystem;

{$APPTYPE CONSOLE}

{$R *.res}

uses
  System.SysUtils,
  uCharacter in 'uCharacter.pas',
  uDice in 'uDice.pas',
  uDepletablePoints in 'uDepletablePoints.pas',
  uRenormalizablePoints in 'uRenormalizablePoints.pas',
  uMoneyHolder in 'uMoneyHolder.pas',
  uStatus in 'uStatus.pas',
  uInventoryType in 'uInventoryType.pas',
  uArmour in 'uArmour.pas',
  uWeapon in 'uWeapon.pas',
  System.Generics.Collections,
  uInventoryList in 'uInventoryList.pas',
  uItemLib in 'uItemLib.pas',
  uPCharacter in 'uPCharacter.pas';

var
  x: Integer;
  a: TObjectList<TCharacter>;
  d: TCharacter;
  b: array[0..99999] of TWeapon;
  c: array[0..99999] of TArmour;
  i: Integer;
  attacker: TCharacter;
  defender: TCharacter;
begin
  try

    for x := 0 to 99999 do
    begin
      b[x]:=TWeapon.Create(5,1,8,0,TDamageTypes.Slash,'Long Sword', 40);
    end;
    for x := 0 to 99999 do
    begin
      c[x]:=TArmour.Create;
    end;
    a:=TObjectList<TCharacter>.Create(true);
    for x := 0 to 99999 do
    begin
      d:=TCharacter.Create(b[Random(2)],c[0],'a ' + IntToStr(x));
      d.Equip(b[x]);
      a.Add(d);
    end;
    while a.Count > 0 do
    begin
      if a.Count < 2 then Exit;

      attacker:=a.Items[random(a.Count - 1)];
      defender:=a.Items[random(a.Count - 1)];
      if attacker <> defender then
      begin
        Writeln('Attacker ' + attacker.Name + ' is attacking to ' + defender.Name);
        if attacker.Attack(defender) then
        begin
          Writeln('Attacker ' + attacker.Name + ' does ' + IntToStr(attacker.LastAttack) + ' damage points.' );
          Writeln('Defender has ' + defender.HP + ' HP ' );
          if not defender.AMAlive then
          begin
            Writeln('Defender has died');
            a.Remove(defender);
          end;
        end
        else Writeln('Attacker fails to hit...');

      end;
    end;
    readln;
    { TODO -oUser -cConsole Main : Insert code here }
  except
    on E: Exception do
      Writeln(E.ClassName, ': ', E.Message);
  end;
end.
